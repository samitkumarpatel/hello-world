name: Build & Package

on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  native-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '21'
          components: 'native-image'
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Generate native image
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          #gu --version
          #native-image --version
          
          ./mvnw -B spring-boot:build-image \
              -Pnative \
              -Dspring-boot.build-image.imageName=ghcr.io/${{ github.actor }}/${{github.event.repository.name}}:$(date +%d%m%Y%H%M)
          
          docker images -a
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker push
        run: docker push -a ghcr.io/${{ github.actor }}/${{github.event.repository.name}}
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v3
    - uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '21'
        components: 'native-image'
        cache: 'maven'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
    - run: |
        touch ~/.m2/settings.xml
        
        cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>$USER</username>
                <password>$GITHUB_TOKEN</password>
              </server>
            </servers>
          </settings>
        EOF
      env:
        USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish maven artifact to GitHub Packages
      run: |
        #./mvnw -B native:compile
        
        ./mvnw -B deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Github Release
      run: gh release create v1.0.0 ./target/*.jar
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}